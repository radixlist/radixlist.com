name: Build, Publish and Deploy Production

on:
  push:
    branches: [main]

env:
  SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
  PRODUCTION_PROJECT_ID: ${{ secrets.PRODUCTION_PROJECT_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker and save container
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          tags: image:latest
          build-args: |
            COMMIT_SHA=$COMMIT_SHA
          outputs: type=docker,dest=/tmp/image.tar

      - name: Upload Docker container artifact
        uses: actions/upload-artifact@v2
        with:
          name: image
          path: /tmp/image.tar

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: production
    steps:
      - name: Checkout
        uses: 'actions/checkout@v3'

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/image.tar
          docker image ls -a

      - name: Tag Docker image
        run: |
          docker tag image:latest gcr.io/${{ env.PRODUCTION_PROJECT_ID }}/${{ env.SERVICE_NAME }}:$GITHUB_SHA

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.PRODUCTION_SERVICE_ACCOUNT }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

      - name: Login to gcr.io
        run: |-
          gcloud --quiet auth configure-docker

      - name: Push Docker container
        run: |-
          docker push gcr.io/${{ env.PRODUCTION_PROJECT_ID }}/${{ env.SERVICE_NAME }}:$GITHUB_SHA

  deploy:
    needs: publish
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.url.outputs.url }}
      short-sha: ${{ env.GITHUB_SHA_SHORT }}
      ref-slug: ${{ env.GITHUB_REF_SLUG_URL }}
    permissions:
      contents: read
      id-token: write
    environment:
      name: production
      url: ${{ steps.url.outputs.url }}
    steps:
      - name: Checkout
        uses: 'actions/checkout@v3'

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.PRODUCTION_SERVICE_ACCOUNT }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

      - name: Set outputs
        id: sha
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Deploy Cloud Run service
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v0'
        with:
          service: '${{ env.SERVICE_NAME }}'
          suffix: ${{ steps.sha.outputs.sha_short }}
          image: 'gcr.io/${{ env.PRODUCTION_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}'
          region: 'europe-west3'

      - name: Set outputs
        id: url
        run: echo "::set-output name=url::${{ steps.deploy.outputs.url }}"
